/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&soft_off { hold-time-ms = <5000>; };

/ {
    combos {
        compatible = "zmk,combos";

        left_enter {
            bindings = <&kp ENTER>;
            key-positions = <1 12 23>;
        };

        right_enter {
            bindings = <&kp ENTER>;
            key-positions = <8 17 26>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <3 14>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <2 13>;
        };

        hold_space {
            bindings = <&kp SPACE>;
            key-positions = <31 23>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <14 15>;
        };

        toggle_nav {
            bindings = <&tog 2>;
            key-positions = <11 2 13>;
            layers = <0 2>;
            require-prior-idle-ms = <350>;
        };

        jsdoc {
            bindings = <&jsdoc>;
            key-positions = <29 28>;
        };

        caps_lock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <13 12 16 17>;
        };

        screen_shot {
            bindings = <&kp LS(LG(N5))>;
            key-positions = <0 11>;
        };

        reset {
            bindings = <&sys_reset>;
            key-positions = <0 31 32 9>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <4 14 5 15>;
        };

        bt_clear_all {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <20 21 29 28 22 27>;
        };
    };

    behaviors {
        hm: HOMEROW_MODS {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <250>;
        };

        hs: HOMEROW_SHIFT {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <0>;
        };
    };

    macros {
        jsdoc: jsdoc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FSLH &kp STAR &kp STAR &kp SPACE>;
            label = "JSDOC";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B   |  N  |  M   |  ,  |  .  |  /  |
            //             | CTL | ALT |  ENT | SPC | GUI  | CTL |

            bindings = <
&kp Q        &kp W       &kp E           &kp R        &kp T            &kp Y         &kp U        &kp I            &kp O       &kp P
&hm LCTRL A  &hm LALT S  &hm LEFT_GUI D  &hm LSHFT F  &kp G            &kp H         &hm RSHFT J  &hm RIGHT_GUI K  &hm LALT L  &hm RCTRL SINGLE_QUOTE
&kp Z        &kp X       &kp C           &kp V        &kp B            &kp N         &kp M        &kp COMMA        &kp DOT     &kp FSLH
&kp LCTRL    &lt 2 TAB   &lt 1 SPACE                  &lt 2 BACKSPACE  &lt 1 DELETE  &kp RCTRL
            >;
        };

        numsym {
            // -----------------------------------------------------------------------------------------
            // |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |
            // |  !  |  @  |  #  |  $  |  %  |  ^  |  &  |  *  |  =  |  -  |
            // |  \  |  {  |  [  |  (  |  _  |  )  |  ]  |  }  |  .  |  `  |
            //             | CTL | ALT |  ENT | SPC | GUI  | CTL |

            bindings = <
&kp N1              &kp N2           &kp N3           &kp N4             &kp N5      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp UNDER       &kp PLUS            &kp TILDE
&hm LCTRL NUMBER_6  &hm LEFT_ALT N7  &hm LEFT_GUI N8  &hm LEFT_SHIFT N9  &kp N0      &kp LEFT_BRACKET      &hm RSHFT RIGHT_BRACKET  &hm RCMD MINUS  &hm LEFT_ALT EQUAL  &hm RCTRL GRAVE
&kp PLUS            &kp MINUS        &kp ASTERISK     &kp SLASH          &kp KP_DOT  &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp SEMICOLON   &kp COLON           &kp BACKSLASH
&trans              &mo 3            &trans                              &mo 3       &trans                &trans
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |BTCLR| RST |     |      |     |      | PGDN |  UP  | PGUP |      |
            // | BT0 |CMENU|     |      |     | HOME | LEFT | DOWN |RIGHT | END  |
            // | BT1 | BOOT|     |      |     |      |      |      |      |      |
            //             | CTL | ALT |  ENT | SPC | GUI  | CTL |

            bindings = <
&mt LEFT_SHIFT PG_UP  &mt LEFT_ALT HOME  &mt LC(LEFT_SHIFT) UP_ARROW  &mt LEFT_ALT END  &kp LS(LA(LC(BACKSLASH)))  &trans      &kp F9        &kp F10       &kp F11          &kp F12
&mt LCTRL PAGE_DOWN   &kp LEFT_ARROW     &kp DOWN                     &kp RIGHT         &kp BACKSPACE              &kp DELETE  &hs LSHFT F5  &hm LCTRL F6  &hm LEFT_ALT F7  &hm LEFT_GUI F8
&kp LC(Z)             &kp LC(X)          &kp LC(C)                    &kp LC(V)         &kp LS(LC(K))              &trans      &kp F1        &kp F2        &kp F3           &kp F4
&trans                &trans             &mo 3                                          &trans                     &mo 3       &trans
            >;
        };

        Admin {
            bindings = <
&bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &trans  &trans  &trans  &trans  &bootloader
&bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &trans  &trans  &trans  &trans  &bt BT_CLR_ALL
&bt BT_CLR     &trans         &trans         &trans         &trans         &trans  &trans  &trans  &trans  &sys_reset
&trans         &trans         &trans                        &trans         &trans  &trans
            >;
        };
    };
};